name: Run Proxy Tests and Upload Results

on:
  schedule:
    - cron: '0 */6 * * *'  # هر ۶ ساعت یکبار
  workflow_dispatch:  # امکان اجرای دستی

jobs:
  test-proxies:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PAT_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pysocks tqdm psutil

    - name: Download Xray-core for Linux
      run: |
        # دانلود آخرین نسخه Xray-core برای لینوکس
        wget -O xray.zip https://github.com/XTLS/Xray-core/releases/latest/download/Xray-linux-64.zip
        
        # حذف فایل‌های قبلی اگر وجود دارند
        rm -f xray LICENSE geoip.dat geosite.dat README.md
        
        # extract با overwrite خودکار
        unzip -o xray.zip
        
        # قابل اجرا کردن و نصب
        chmod +x xray
        sudo mv xray /usr/local/bin/

    - name: Create necessary directories
      run: |
        mkdir -p main/data/raw main/data/working_json main/data/working_url main/log

    - name: Run v2ray config collector
      run: |
        cd main/v2ray_config_collector
        python main.py
        echo "✅ Config collection completed"

    - name: Check generated config files
      run: |
        echo "Generated config files in v2ray_config_collector:"
        ls -la main/v2ray_config_collector/data/unique/protocols/
        echo "Content of config files:"
        find main/v2ray_config_collector/data/unique/protocols/ -name "*.json" -exec echo "{}: " \; -exec head -2 {} \;

    - name: Copy config files to tester directory
      run: |
        # کپی فایل‌های پیکربندی به مسیر مورد نیاز tester
        cp main/v2ray_config_collector/data/unique/protocols/shadowsocks_configs.json main/data/raw/ || echo "shadowsocks config not found"
        cp main/v2ray_config_collector/data/unique/protocols/vmess_configs.json main/data/raw/ || echo "vmess config not found"
        cp main/v2ray_config_collector/data/unique/protocols/vless_configs.json main/data/raw/ || echo "vless config not found"
        
        echo "Copied config files to main/data/raw/:"
        ls -la main/data/raw/

    - name: Run the tests
      run: |
        cd main/module
        # تست تمام فایل‌های پیکربندی موجود
        if [ -f "../../data/raw/shadowsocks_configs.json" ]; then
          echo "Testing Shadowsocks configurations..."
          python tester.py --shadowsocks ../../data/raw/shadowsocks_configs.json --xray-path /usr/local/bin/xray
        else
          echo "❌ Shadowsocks config file not found"
        fi
        
        if [ -f "../../data/raw/vmess_configs.json" ]; then
          echo "Testing VMess configurations..."
          python tester.py --vmess ../../data/raw/vmess_configs.json --xray-path /usr/local/bin/xray
        else
          echo "❌ VMess config file not found"
        fi
        
        if [ -f "../../data/raw/vless_configs.json" ]; then
          echo "Testing VLESS configurations..."
          python tester.py --vless ../../data/raw/vless_configs.json --xray-path /usr/local/bin/xray
        else
          echo "❌ VLESS config file not found"
        fi

    - name: Configure git for push
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"

    - name: Commit and push results
      run: |
        # اضافه کردن تمام فایل‌های تولید شده و نتایج
        git add main/v2ray_config_collector/data/unique/protocols/*
        git add main/data/raw/*
        git add main/data/working_json/*
        git add main/data/working_url/*
        git add main/log/*
        
        git commit -m "Auto-update: Collected and tested configs - $(date +'%Y-%m-%d %H:%M')" || echo "No changes to commit"
        
        # ابتدا تغییرات را از remote دریافت کنید
        git pull https://${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}.git main --rebase --autostash
        
        # سپس تغییرات را push کنید
        git push https://${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}.git main
